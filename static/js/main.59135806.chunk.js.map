{"version":3,"sources":["features/unitInfo/unitInfoConstants.js","features/modals/modalConstants.js","features/contextMenu/contextMenuConstants.js","features/tabs/tabConstants.js","features/tools/toolConstant.js","features/mechs/mechsConstants.js","features/entities/entitySelectors.js","app/layout/logos.svg","features/pilots/Pilot.js","features/mechs/Mech.js","features/mechs/MechDesign.js","features/unitInfo/Unit.js","features/unitInfo/Faction.js","features/unitInfo/Lance.js","app/orm/orm.js","features/editing/editingConstants.js","features/pilots/pilotsConstant.js","features/entities/entityConstants.js","features/tabs/Tab.jsx","features/tabs/TabBar.jsx","features/tabs/tabSelectors.js","features/tabs/TabBarContainer.jsx","features/tabs/tabAction.js","features/unitInfo/unitInfoSelector.js","features/unitInfo/unitInfoActions.js","features/modals/modalActions.js","common/utils/clientUtils.js","common/components/ColorPicker/ColorPickerButton.jsx","features/unitInfo/UnitInfo/UnitInfoForm.jsx","common/components/ColorPicker/colorPickerAction.js","features/unitInfo/UnitOrganizationTree/LancePilot.jsx","features/unitInfo/UnitOrganizationTree/Lance.jsx","features/unitInfo/UnitOrganizationTree/UnitOrganizationTree.jsx","features/unitInfo/UnitInfo/UnitInfo.jsx","features/pilots/PilotList/PilotListHeader.jsx","features/entities/entityActions.js","features/contextMenu/contextMenuActions.js","features/pilots/PilotList/PilotListRow.jsx","features/pilots/pilotsSelector.js","features/editing/editingActions.js","features/pilots/pilotsActions.js","features/pilots/PilotList/PilotList.jsx","features/pilots/PilotDetails/PilotDetails.jsx","features/pilots/PilotDetails/PilotCommands.jsx","features/pilots/Pilots/Pilots.jsx","features/mechs/MechList/MechsListHeader.jsx","features/mechs/mechSelectors.js","features/mechs/MechList/MechsListRow.jsx","features/mechs/MechList/MechsList.jsx","features/mechs/mechsActions.js","features/mechs/MechDetails/MechDetails.jsx","features/mechs/Mechs/Mechs.jsx","data/sampleData.js","features/tools/Tools/Tools.jsx","features/tools/toolActions.js","data/mockAPI.js","features/modals/testModal.jsx","common/components/ColorPicker/ColorPickerDialog.jsx","features/modals/modalManager.jsx","common/components/AbsolutePosition.jsx","features/contextMenu/ContextMenu.jsx","features/contextMenu/contextMenuSelectors.js","features/contextMenu/TestContextMenu.jsx","features/pilots/PilotList/PilotListItemMenu.jsx","features/contextMenu/ContextMenuManager.jsx","app/layout/App.js","common/utils/reducerUtils.js","features/tabs/tabReducer.js","features/unitInfo/unitInfoReducer.js","app/reducers/entitiesReducer.js","features/pilots/pilotsReducer.js","features/mechs/mechsReducer.js","app/reducers/editingEntitiesReducer.js","features/modals/modalReducer.js","features/contextMenu/contextMenuReducer.js","features/entities/entityReducer.js","common/utils/modelUtils.js","features/editing/editingUtils.js","features/editing/editingReducer.js","app/reducers/rootReducer.js","index.js","app/store/configureStore.js","features/editing/editingSelectors.js"],"names":["UNIT_INFO_UPDATE","UNIT_INFO_SET_COLOR","MODAL_OPEN","MODAL_CLOSE","CONTEXT_MENU_SHOW","CONTEXT_MENU_HIDE","TAB_SELECTED","DATA_LOADED","MECH_SELECT","selectEntities","state","entities","getEntitiesSession","createSelector","orm","session","getUnsharedEntitiesSession","module","exports","defaultAttributes","name","rank","gunnery","piloting","age","Pilot","this","ref","otherPilot","update","pilotData","upsert","newAttributes","combinedAttributes","create","id","attr","mech","fk","Model","modelName","Mech","otherMech","mechData","type","pilot","MechDesign","otherDesign","designData","weight","Unit","unitData","Lance","parseData","pilots","map","pilotEntry","parse","mechs","mechEntry","lances","lanceEntry","affiliation","color","many","Faction","factionData","lanceData","ORM","stateSelector","register","EDIT_ITEM_EXISTING","EDIT_ITEM_NEW","EDIT_ITEM_UPDATE","EDIT_ITEM_APPLY","EDIT_ITEM_STOP","EDIT_ITEM_RESET","PILOT_SELECT","PILOT_EDIT_START","PILOT_EDIT_STOP","PILOT_RANKS","ENTITY_UPDATE","ENTITY_DELETE","ENTITY_CREATE","Tab","label","onClick","active","Menu","Item","TabBar","props","tabs","currentTab","onTabClick","otherProps","tabItems","tabInfo","key","tabPanels","TabComponent","component","show","tabular","attached","selectCurrentTab","actions","tabName","payload","connect","selectCurrentUnitInfo","currentUnitModel","all","first","currentUnitInfo","setUnitColor","openModal","modalType","modalProps","closeModal","getValueFromEvent","e","newValue","target","value","checked","isObject","ColorPickerButton","disabled","Button","style","padding","margin","width","height","backgroundColor","updateUnitInfo","values","showColorPicker","initialColor","onColorPickedAction","onColorPicked","UnitInfoForm","onAffiliationChanged","result","newValues","onNameChanged","onColorClicked","unitInfo","factions","isDisplayUnit","Boolean","displayFactions","faction","text","Segment","Form","size","Group","Field","placeholder","onChange","Dropdown","selection","options","Component","toRefArray","UNKNOWN_PILOT","UNKNOWN_MECH","ownProps","idExists","pilotID","pilotModel","withId","mechModel","mechName","List","Icon","Content","Header","UNKNOWN_LANCE","lance","lanceID","lanceModel","lancePilots","UNKNOWN_UNIT","unit","unitModel","factionName","colorBlock","marginLeft","border","displyText","lanceEntries","display","UnitInfo","Grid","Column","as","PilotListHeader","Table","Row","HeaderCell","deleteEntity","itemType","itemID","showContextMenu","x","y","menuArgs","location","hideContextMenu","mechType","onPilotClicked","_","noop","selected","onContextMenu","preventDefault","stopPropagation","pageX","pageY","pilotId","Cell","compact","basic","circular","icon","selectPilots","selectCurrentPilot","currentPilot","selectIsEditingPilot","isEditing","applyItemEdits","stopEditingItem","selectPilot","dispatch","getState","cancelEditingPilot","handleStopEditingPilot","applyEdits","isNewPilot","hasId","PilotList","pilotRows","celled","Body","toModelArray","getId","RANKS","SKILL_VALUES","MECHS","startEditingPilot","stopEditingPilot","editItemAttributes","newItemAttributes","resetEditedItem","PilotDetails","onInputChanged","bind","onDropdownChanged","onStartEditingClicked","onStopEditingClicked","onResetClicked","pilotIsSelected","isEditingPilot","canStartEditing","canStopEditing","control","fluid","primary","secondary","marginRight","negative","getEditingEntitiesSession","addNewPilot","cuid","pilotContents","generate","toJSON","Pilots","MechsListHeader","WEIGHT_CLASSES","weights","getWeightClass","find","wc","includes","selectCurrentMech","currentMech","mechID","onMechClick","weightClass","selectMech","mechId","MechsList","mechRows","Mechs","sampleData","designs","loadUnitData","Promise","resolve","then","data","Tools","onOpenModalClicked","onOpenTestModalClicked","onShowContextMenuClicked","counter","TestModal","onNextModalClick","Modal","closeIcon","open","onClose","image","Description","Actions","colorSelected","actionToDispatch","newAction","cloneDeep","ColorPickerDialog","onSelectClicked","onSelectedColorChanged","colorEvent","setState","hex","onChangeComplete","positive","defaultProps","modalComponentLookUpTable","ModalManager","renderedModal","currentModal","modalDescription","index","ModalComponent","modals","AbsolutePosition","children","nodeRef","position","top","bottom","left","right","className","ContextMenu","handleClickOutside","document","addEventListener","node","contains","selectContextMenu","contextMenu","TestContextMenu","vertical","PilotListItemMenu","onDeleteClicked","menuType","ContextMenuManager","menu","MenuComponent","isOpened","App","src","logo","alt","inverted","Container","TabBarContainer","createReducer","initialState","fnMap","handler","createConditionalSliceReducer","sliceName","sliceReducer","action","currentUnit","getEmptyState","forEach","modelType","model","delete","design","prevSelectedPilot","newSelectedPilot","isSamePilot","currenttPilot","prevSelectedMech","newSelectedMech","concat","newState","slice","pop","contextMenuInitialState","undefined","updateEntity","ModelClass","createEntity","entityCrudFeatureReducer","getModelByType","updateEditingEntitiesState","updatedEditingEntities","editingEntities","copyEntity","sourceEntities","destinationEntities","readEntityData","editItemExisting","selectEditingEntities","editItemStop","rootReducer","reducers","previous","current","reduce","p","r","reduceReducers","entityCrudReducer","updatedEntities","updateEntitiesState","readSession","writeSession","existingItem","updateFrom","itemContents","updateEditedEntity","combineReducers","entitiesReducer","editingEntitiesReducer","pilotsReducer","mechsReducer","tabReducer","modalReducer","contextMenuReducer","unitInfoReducer","store","preloadState","middleware","thunk","storeEnhancers","applyMiddleware","compoesedEnhancer","composeWithDevTools","createStore","configureStore","rootEl","getElementById","require","default","ReactDOM","render"],"mappings":"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","file":"static/js/main.59135806.chunk.js","sourcesContent":["export const UNIT_INFO_UPDATE = 'UNIT_INFO_UPDATE';\r\nexport const UNIT_INFO_SET_COLOR = 'UNIT_INFO_SET_COLOR';\r\n","export const MODAL_OPEN = 'MODAL_OPEN';\r\nexport const MODAL_CLOSE = 'MODAL_CLOSE';\r\n","export const CONTEXT_MENU_SHOW = 'CONTEXT_MENU_SHOW';\r\nexport const CONTEXT_MENU_HIDE = 'CONTEXT_MENU_HIDE';\r\n","export const TAB_SELECTED = \"TAB_SELECTED\";","export const DATA_LOADED = 'DATA_LOADED';\r\n","export const MECH_SELECT = 'MECH_SELECT';\r\n","import { createSelector } from 'reselect';\r\n\r\nimport orm from '../../app/orm';\r\n\r\nexport const selectEntities = (state) => state.entities;\r\n\r\nexport const getEntitiesSession = createSelector(\r\n  selectEntities,\r\n  entities => orm.session(entities)\r\n);\r\n\r\nexport const getUnsharedEntitiesSession = (state) => {\r\n  const entities = selectEntities(state);\r\n\r\n  return orm.session(entities);\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logos.7c7c539a.svg\";","import { Model, fk, attr } from 'redux-orm';\r\n\r\nconst defaultAttributes = {\r\n  name : 'New Pilot',\r\n  rank : 'Private',\r\n  gunnery : 4,\r\n  piloting : 5,\r\n  age : 27\r\n};\r\n\r\nexport default class Pilot extends Model {\r\n  static get fields() {\r\n    return {\r\n      id : attr(),\r\n      name : attr(),\r\n      rank : attr(),\r\n      gunnery : attr(),\r\n      piloting : attr(),\r\n      age : attr(),\r\n      mech : fk('Mech')\r\n    }\r\n  }\r\n\r\n  static parse(pilotData) {\r\n    return this.upsert(pilotData);\r\n  }\r\n\r\n  static generate(newAttributes = {}) {\r\n    const combinedAttributes = {\r\n      ...defaultAttributes,\r\n      ...newAttributes,\r\n    };\r\n\r\n    return this.create(combinedAttributes);\r\n  }\r\n\r\n  toJSON() {\r\n    return {...this.ref}\r\n  }\r\n\r\n  updateFrom(otherPilot) {\r\n    this.update(otherPilot.ref);\r\n  }\r\n}\r\n\r\nPilot.modelName = 'Pilot';\r\n","import { Model, attr, fk } from 'redux-orm';\r\n\r\nexport default class Mech extends Model {\r\n\r\n  // Redux ORM fields getter property\r\n  static get fields() {\r\n    return {\r\n      id : attr(),\r\n      type : fk('MechDesign'),\r\n      pilot : fk('Pilot')\r\n    }\r\n  }\r\n\r\n  static parse(mechData) {\r\n    return this.upsert(mechData);\r\n  }\r\n\r\n  toJSON() {\r\n    return {...this.ref};\r\n  }\r\n\r\n  updateFrom(otherMech) {\r\n    this.update(otherMech.ref)\r\n  }\r\n}\r\nMech.modelName = 'Mech';\r\n","import { Model, attr } from 'redux-orm'\r\n\r\nexport default class MechDesign extends Model {\r\n  static get fields() {\r\n    return {\r\n      id : attr(),\r\n      name : attr(),\r\n      weight : attr(),\r\n    }\r\n  }\r\n  \r\n  static parse(designData) {\r\n    return this.upsert(designData);\r\n  }\r\n\r\n  toJSON() {\r\n    return {...this.ref}\r\n  }\r\n\r\n  updateform(otherDesign) {\r\n    this.update(otherDesign)\r\n  }\r\n}\r\nMechDesign.modelName = 'MechDesign';\r\n","import { Model, fk, attr, many } from 'redux-orm';\r\n\r\nexport default class Unit extends Model {\r\n  // static modelName = \"Unit\";\r\n  static get fields() {\r\n    return {\r\n      id : attr(),\r\n      name : attr(),\r\n      affiliation : fk('Faction'),\r\n      color : attr(),\r\n      lances : many('Lance'),\r\n      pilots : many('Pilot'),\r\n      mechs : many('Mech'),\r\n    }\r\n  }\r\n\r\n  static parse(unitData) {\r\n    const {Pilot, Mech, Lance} = this.session;\r\n\r\n    const parseData = {\r\n      ...unitData,\r\n      pilots : unitData.pilots.map(pilotEntry => Pilot.parse(pilotEntry)),\r\n      mechs : unitData.mechs.map(mechEntry => Mech.parse(mechEntry)),\r\n      lances : unitData.lances.map(lanceEntry => Lance.parse(lanceEntry)),\r\n    };\r\n\r\n    return this.upsert(parseData);\r\n  }\r\n}\r\n\r\nUnit.modelName = 'Unit';\r\n","import { Model, attr } from 'redux-orm';\r\n\r\nexport default class Faction extends Model {\r\n  static get fields() {\r\n    return {\r\n      id : attr(),\r\n      name : attr(),\r\n    };\r\n  }\r\n\r\n  static parse(factionData) {\r\n    return this.upsert(factionData);\r\n  }\r\n}\r\n\r\nFaction.modelName = 'Faction';\r\n","import { Model, attr, many } from  'redux-orm';\r\n\r\nexport default class Lance extends Model {\r\n  static get fields() {\r\n    return {\r\n      id : attr(),\r\n      name : attr(),\r\n      pilots : many('Pilot')\r\n    }\r\n  }\r\n\r\n  static parse(lanceData) {\r\n    return this.upsert(lanceData);\r\n  }\r\n}\r\n\r\nLance.modelName = 'Lance';\r\n","import { ORM } from 'redux-orm';\r\nimport Pilot from '../../features/pilots/Pilot';\r\nimport Mech from '../../features/mechs/Mech';\r\nimport MechDesign from '../../features/mechs/MechDesign';\r\nimport Unit from '../../features/unitInfo/Unit';\r\nimport Faction from '../../features/unitInfo/Faction';\r\nimport Lance from '../../features/unitInfo/Lance';\r\n\r\nconst orm = new ORM({\r\n  stateSelector: state => state.orm,\r\n});\r\n\r\norm.register(Pilot, Mech, MechDesign, Unit, Faction, Lance);\r\n\r\nexport default orm;\r\n","export const EDIT_ITEM_EXISTING = 'EDIT_ITEM_EXISTING';\r\nexport const EDIT_ITEM_NEW = 'EDIT_ITEM_NEW';\r\nexport const EDIT_ITEM_UPDATE = 'EDIT_ITEM_UPDATE';\r\nexport const EDIT_ITEM_APPLY = 'EDIT_ITEM_APPLY';\r\nexport const EDIT_ITEM_STOP = 'EDIT_ITEM_STOP';\r\nexport const EDIT_ITEM_RESET = 'EDIT_ITEM_RESET';\r\n","export const PILOT_SELECT = 'PILOT_SELECT';\r\nexport const PILOT_EDIT_START = 'PILOT_EDIT_START';\r\nexport const PILOT_EDIT_STOP = 'PILOT_EDIT_STOP';\r\n\r\n\r\nexport const PILOT_RANKS = [\r\n  \"Private\",\r\n  \"Corporal\",\r\n  \"Sergeant\",\r\n  \"Lieutenant\",\r\n  \"Captain\",\r\n  \"Major\",\r\n  \"Colonel\",\r\n];\r\n","export const ENTITY_UPDATE = 'ENTITY_UPDATE';\r\nexport const ENTITY_DELETE = 'ENTITY_DELETE';\r\nexport const ENTITY_CREATE = 'ENTITY_CREATE';\r\n","import React from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nconst Tab = ({ name, label, onClick, active }) => {\r\n\r\n  return (\r\n    <Menu.Item \r\n      name={name}\r\n      label={label}\r\n      active={active}\r\n      onClick={() => onClick(name)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Tab","import React from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport ToggleDisplay from 'react-toggle-display';\r\n\r\nimport Tab from './Tab';\r\n\r\nconst TabBar = (props) => {\r\n  const { tabs, currentTab, onTabClick, ...otherProps } = props\r\n\r\n  const tabItems = tabs.map(tabInfo => {\r\n    const { name, label } = tabInfo;\r\n\r\n    return (\r\n      <Tab\r\n        key={name}\r\n        name={name}\r\n        label={label}\r\n        active={currentTab === name}\r\n        onClick={onTabClick} />\r\n    );\r\n  });\r\n\r\n  const tabPanels = tabs.map(tabInfo => {\r\n    const { name, component : TabComponent } = tabInfo;\r\n\r\n    return(\r\n      <ToggleDisplay show={name === currentTab} key={name}>\r\n        <TabComponent />\r\n      </ToggleDisplay>\r\n    );\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <Menu tabular attached=\"top\" {...otherProps}>\r\n        {tabItems}\r\n      </Menu>\r\n\r\n      {tabPanels}\r\n    </div>\r\n  )  \r\n}\r\n\r\nexport default TabBar\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const selectTabs = state => {\r\n\r\n    return state.tabs;\r\n}\r\n\r\nexport const selectCurrentTab = createSelector(\r\n    selectTabs,\r\n    tabs => tabs.currentTab\r\n);\r\n","import { connect } from 'react-redux';\r\n\r\nimport TabBar from './TabBar';\r\n\r\nimport { selectCurrentTab } from './tabSelectors';\r\nimport { selectTab } from './tabAction';\r\n\r\nconst mapState = (state) => {\r\n    const currentTab = selectCurrentTab(state);\r\n    \r\n    return { currentTab }\r\n}\r\n\r\n// dispatch \r\nconst actions = { onTabClick : selectTab };\r\n\r\nexport default connect(mapState, actions)(TabBar);\r\n","import {TAB_SELECTED} from './tabConstants';\r\n\r\nexport function selectTab(tabName) {\r\n    return {\r\n        type: TAB_SELECTED,\r\n        payload: {tabName}\r\n    };\r\n}\r\n\r\n","import { createSelector } from 'reselect';\r\nimport { getEntitiesSession } from '../entities/entitySelectors'\r\n\r\n\r\nexport const selectCurrentUnitInfo = createSelector(\r\n  getEntitiesSession,\r\n  (session) => {\r\n    const {Unit} = session;\r\n    const currentUnitModel = Unit.all().first();\r\n\r\n    let currentUnitInfo = null;\r\n\r\n    if (currentUnitModel) {\r\n      currentUnitInfo = currentUnitModel.ref;\r\n    }\r\n\r\n    return currentUnitInfo;\r\n  }\r\n)\r\n\r\n","import { UNIT_INFO_UPDATE, UNIT_INFO_SET_COLOR } from \"./unitInfoConstants\";\r\n\r\nexport function updateUnitInfo(values) {\r\n  \r\n  return {\r\n    type: UNIT_INFO_UPDATE,\r\n    payload: values\r\n  }\r\n}\r\n\r\nexport function setUnitColor(color) {\r\n\r\n  return {\r\n    type : UNIT_INFO_SET_COLOR,\r\n    payload : {color}\r\n  }\r\n}\r\n","import {\r\n  MODAL_OPEN,\r\n  MODAL_CLOSE,\r\n} from './modalConstants';\r\n\r\nexport function openModal(modalType, modalProps) {\r\n  return {\r\n    type : MODAL_OPEN,\r\n    payload : { modalType, modalProps, }\r\n  };\r\n}\r\n\r\nexport function closeModal(modalType, modalProps) {\r\n  return {\r\n    type : MODAL_CLOSE,\r\n  };\r\n}\r\n\r\n\r\n","import { isObject } from 'lodash';\r\n\r\nexport function getValueFromEvent(e) {\r\n  const {target} = e;\r\n\r\n  let newValue;\r\n\r\n  if(target) {\r\n    const value = (target.type === 'checkbox') ? target.checked : target.value;\r\n    newValue = {\r\n      [target.name] : value,\r\n    };\r\n  }\r\n  else if(isObject(e)) {\r\n    newValue = e;\r\n  }\r\n\r\n  return newValue;\r\n}\r\n\r\nexport const noop = () => {};","import React from  'react';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst ColorPickerButton = ({ value, onClick, disabled=false }) => {\r\n\r\n  return (\r\n    <Button\r\n      type=\"button\"\r\n      style={{ padding: \"4px\", margin: 0 }}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n    >\r\n      <div\r\n        style={{\r\n          width : 30,\r\n          height : 20,\r\n          backgroundColor : value,\r\n        }}\r\n      />\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ColorPickerButton;\r\n","import React, { Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Form,\r\n  Dropdown,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\n\r\nimport { selectCurrentUnitInfo } from '../unitInfoSelector';\r\nimport { updateUnitInfo, setUnitColor } from '../unitInfoActions';\r\nimport { showColorPicker } from '../../../common/components/ColorPicker/colorPickerAction';\r\n\r\nimport { getValueFromEvent } from '../../../common/utils/clientUtils';\r\n\r\nimport ColorPickerButton from '../../../common/components/ColorPicker/ColorPickerButton';\r\n\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\n\r\n\r\nconst mapState = (state) => {\r\n  const session = getEntitiesSession(state);\r\n  const { Faction } = session;\r\n\r\n  const factions = Faction.all().toRefArray();\r\n\r\n  const unitInfo = selectCurrentUnitInfo(state);\r\n\r\n  return {\r\n    factions,\r\n    unitInfo,\r\n  };\r\n}\r\n\r\n\r\nconst actions = {\r\n  updateUnitInfo,\r\n  showColorPicker,\r\n  setUnitColor\r\n}\r\n\r\nclass UnitInfoForm extends Component {\r\n  onAffiliationChanged = (e, result) => {\r\n    const {name, value} = result;\r\n\r\n    const newValues = { [name] : value};\r\n    this.props.updateUnitInfo(newValues);\r\n  }\r\n\r\n  onNameChanged = (e) => {\r\n    const newValues = getValueFromEvent(e)\r\n    this.props.updateUnitInfo(newValues);\r\n  }\r\n\r\n  \r\n  // Handler to display the color picker dialog\r\n  onColorClicked = () => {\r\n    const onColorPickedAction = setUnitColor();\r\n    \r\n    this.props.showColorPicker(this.props.unitInfo.color, onColorPickedAction);\r\n  }\r\n\r\n  render() {\r\n    const {unitInfo, factions} = this.props;\r\n    const isDisplayUnit = Boolean(unitInfo);\r\n    let name=\"\", affiliation=null, color=null;\r\n\r\n    if(isDisplayUnit) {\r\n      ({name, affiliation, color} = unitInfo);\r\n    }\r\n\r\n    const displayFactions = factions.map(faction => {\r\n      return {\r\n        value : faction.id,\r\n        text : faction.name,\r\n      };\r\n    })\r\n\r\n    return(\r\n        <Segment attached=\"bottom\">\r\n            <Form size=\"large\">\r\n              <Form.Group>\r\n                <Form.Field name=\"name\">\r\n                    <label>Unit Name</label>\r\n                    <input\r\n                      name=\"name\"\r\n                      placeholder=\"Name\"\r\n                      value={name}\r\n                      onChange={this.onNameChanged}\r\n                      />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Field name=\"Affiliation\" width={12} >\r\n                    <label>Affiliation</label>\r\n                    <Dropdown \r\n                        name=\"affiliation\"\r\n                        selection \r\n                        options={displayFactions}\r\n                        value={affiliation}\r\n                        onChange={this.onAffiliationChanged}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field name=\"color\">\r\n                  <label>Color</label>\r\n                  <ColorPickerButton\r\n                    value={color}\r\n                    onClick={this.onColorClicked}\r\n                    disabled={!isDisplayUnit}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n            </Form>\r\n        </Segment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapState, actions)(UnitInfoForm);\r\n","import _ from 'lodash';\r\n\r\nimport {\r\n  openModal\r\n} from '../../../features/modals/modalActions';\r\n\r\nexport function showColorPicker(initialColor, onColorPickedAction) {\r\n  // Define props we want to \"pass\" to the ColorPicker dialog,\r\n  // includes the body of the action that should be dispatches when\r\n  // the dialog is used to select a color.\r\n  const colorPickerProps = {\r\n    color : initialColor,\r\n    onColorPicked : onColorPickedAction,\r\n  }\r\n\r\n  return openModal('ColorPickerDialog', colorPickerProps);\r\n}\r\n\r\nexport function colorSelected(color, actionToDispatch) { \r\n  \r\n  return (dispatch) => {\r\n    if(actionToDispatch) {\r\n      const newAction = _.cloneDeep(actionToDispatch);\r\n      newAction.payload.color = color;\r\n\r\n      dispatch(newAction);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  List \r\n}  from 'semantic-ui-react';\r\n\r\nimport  { getEntitiesSession } from '../../entities/entitySelectors';\r\n\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const session = getEntitiesSession(state);\r\n\r\n  const {Pilot} = session;\r\n\r\n  let pilot, mech;\r\n\r\n  if(Pilot.idExists(ownProps.pilotID)) {\r\n    const pilotModel = Pilot.withId(ownProps.pilotID);\r\n    pilot = pilotModel.ref;\r\n\r\n    if(pilotModel.mech) {\r\n      mech = pilotModel.mech.type.ref;\r\n    }\r\n  }\r\n\r\n  return {pilot, mech};\r\n}\r\n\r\nconst UNKNOWN_PILOT = {name : 'Unknown', rank : \"\"};\r\nconst UNKNOWN_MECH = {id : 'N/A', name : \"\"};\r\n\r\n\r\nconst LancePilot = ({ pilot = UNKNOWN_PILOT, mech = UNKNOWN_MECH }) => {\r\n  const { name, rank } = pilot;\r\n  const { id : mechModel, name : mechName } = mech;\r\n\r\n  return (\r\n    <List.Item>\r\n      <List.Icon name=\"user\" />\r\n      <List.Content>\r\n        <List.Header>{rank} {name} - {mechModel} {mechName}</List.Header>\r\n      </List.Content>\r\n    </List.Item>\r\n  )\r\n}\r\n\r\nexport default connect(mapState)(LancePilot);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  List,\r\n} from 'semantic-ui-react';\r\n\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\nimport LancePilot from './LancePilot';\r\n\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const session = getEntitiesSession(state);\r\n  const {Lance} = session;\r\n  \r\n  let lance, pilots;\r\n  \r\n  if(Lance.idExists(ownProps.lanceID)) {\r\n    const lanceModel = Lance.withId(ownProps.lanceID);\r\n    \r\n    lance = lanceModel.ref;\r\n    pilots = lanceModel.pilots.toRefArray().map(pilot => pilot.id);\r\n  }\r\n  \r\n  return { lance, pilots};\r\n}\r\n\r\nconst UNKNOWN_LANCE = {name : \"Unknown\"};\r\n\r\n\r\nconst Lance = ({ lance = UNKNOWN_LANCE, pilots = []}) => {\r\n  const {name} = lance;\r\n  \r\n  const lancePilots = pilots.map(pilotID => <LancePilot key={pilotID} pilotID={pilotID} />)\r\n  \r\n\r\n  return (\r\n    <List.Item>\r\n      <List.Icon name=\"cube\" />\r\n      <List.Content>\r\n        <List.Header>{name}</List.Header>\r\n          <List.List>\r\n            {lancePilots}\r\n          </List.List>\r\n      </List.Content>\r\n    </List.Item>\r\n  )\r\n}\r\n\r\nexport default connect(mapState)(Lance);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\n\r\nimport {\r\n    List,\r\n} from 'semantic-ui-react';\r\n\r\nimport Lance from './Lance';\r\n\r\n\r\nconst mapState = (state) => {\r\n    const session = getEntitiesSession(state);\r\n    const {Unit} = session;\r\n    \r\n    let unit, faction, lances;\r\n    \r\n    const unitModel = Unit.all().first();\r\n\r\n    if(unitModel) {\r\n        unit = unitModel.ref;\r\n        faction = unitModel.affiliation.ref;\r\n        lances = unitModel.lances.toRefArray().map(lance => lance.id);\r\n    }\r\n\r\n    return {unit, faction, lances};\r\n}\r\n\r\nconst UNKNOWN_UNIT = { name : 'UNKNOWN' };\r\n\r\n\r\nconst UnitOrganizationTree = ({ unit = UNKNOWN_UNIT, faction = {},  lances = [] }) => {\r\n    const { name, color } = unit;\r\n    const { name : factionName } = faction\r\n\r\n    const colorBlock = <div \r\n        style={{\r\n            marginLeft : 10,\r\n            backgroundColor : color,\r\n            border : '1px solid black',\r\n            height : 20,\r\n            width : 40\r\n        }}\r\n    />\r\n\r\n    const displyText = factionName ? `${name} / ${factionName}` : name; \r\n\r\n    const lanceEntries = lances.map(lanceID => (\r\n        <Lance key={lanceID} lanceID={lanceID} />\r\n    ))\r\n\r\n    return (\r\n      <List size=\"large\">\r\n          <List.Item>\r\n              <List.Icon name=\"cubes\" />\r\n              <List.Content>\r\n                  <List.Header style={{display : 'flex'}}>{displyText} {colorBlock}</List.Header>\r\n                  <List.List>\r\n                    {lanceEntries}\r\n                  </List.List>\r\n              </List.Content>\r\n          </List.Item>\r\n      </List>\r\n    )\r\n}\r\n\r\nexport default connect(mapState)(UnitOrganizationTree);\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n} from 'semantic-ui-react';\r\n\r\nimport UnitInfoForm from './UnitInfoForm';\r\nimport UnitOrganizationTree from '../UnitOrganizationTree/UnitOrganizationTree';\r\n\r\n\r\nclass UnitInfo extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid>\r\n          <Grid.Column width={10}>\r\n            <Header as=\"h3\">Units Table of Organization</Header>\r\n            <Segment>\r\n            <UnitOrganizationTree />\r\n            </Segment>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={6}>\r\n            <Header as=\"h3\">Edit Units</Header>\r\n            <Segment>\r\n            <UnitInfoForm />\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default UnitInfo;\r\n","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst PilotListHeader = () => (\r\n    <Table.Header>\r\n        <Table.Row>\r\n            <Table.HeaderCell width={5}>\r\n                Name\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={3}>\r\n                Rank\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={2}>\r\n                Age\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={2}>\r\n                Skills\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={4}>\r\n                Mech\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell width={1} />\r\n\r\n        </Table.Row>\r\n    </Table.Header>\r\n);\r\n\r\nexport default PilotListHeader;\r\n","import { ENTITY_UPDATE, ENTITY_DELETE, ENTITY_CREATE } from './entityConstants';\r\n\r\nexport function updateEntity(itemType, itemID, newItemAttributes) {\r\n  return {\r\n    type : ENTITY_UPDATE,\r\n    payload : {\r\n      itemType,\r\n      itemID,\r\n      newItemAttributes\r\n    },\r\n  };\r\n}\r\n\r\nexport function deleteEntity(itemType, itemID)  {\r\n  return {\r\n    type : ENTITY_DELETE,\r\n    payload : { itemType, itemID }\r\n  };\r\n}\r\n\r\nexport function createEntity(itemType, newItemAttributes)  {\r\n  return {\r\n    type : ENTITY_CREATE,\r\n    payload : {\r\n      itemType,\r\n      newItemAttributes\r\n    }\r\n  };\r\n}\r\n","import { CONTEXT_MENU_SHOW, CONTEXT_MENU_HIDE } from './contextMenuConstants';\r\n\r\nexport function showContextMenu(x, y, type, menuArgs) {\r\n  return {\r\n    type : CONTEXT_MENU_SHOW,\r\n    payload : {\r\n      location : {\r\n        x,\r\n        y\r\n      },\r\n      type,\r\n      menuArgs\r\n    }\r\n  }\r\n}\r\n\r\nexport function hideContextMenu() {\r\n  return {\r\n    type : CONTEXT_MENU_HIDE,\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\n\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\nimport { deleteEntity } from '../../entities/entityActions';\r\nimport { showContextMenu } from '../../contextMenu/contextMenuActions';\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const session = getEntitiesSession(state);\r\n  const {Pilot} = session;\r\n\r\n  let pilot = {};\r\n\r\n  if(Pilot.idExists(ownProps.pilotID)) {\r\n    const pilotModel = Pilot.withId(ownProps.pilotID);\r\n\r\n    // Access the plain JS object using the 'ref' field,\r\n    // and make a shallow copy of it.\r\n    pilot = {\r\n      ...pilotModel.ref\r\n    };\r\n\r\n    // Look up the pilotModel.mech.mechType\r\n    // Just in case the relational fields are null.\r\n    const {mech} = pilotModel;\r\n\r\n    // If there is an associated mech, Include the \r\n    // mech type's ID as a field in the data passes to the component.\r\n    if(mech && mech.type){\r\n      pilot.mechType = mech.type.id;\r\n    }\r\n  }\r\n\r\n  return {pilot};\r\n}\r\n\r\nconst actions = {\r\n  showContextMenu,\r\n  deleteEntity,\r\n}\r\n\r\n\r\nconst PilotListRow = ({ pilot={}, onPilotClicked=_.noop, selected, deleteEntity, showContextMenu }) => {\r\n  const {\r\n      id = null,\r\n      name = \"\",\r\n      rank = \"\",\r\n      age = \"\",\r\n      gunnery = \"\",\r\n      piloting = \"\",\r\n      mechType = \"\",\r\n  } = pilot;\r\n\r\n  const onDeleteClicked = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    deleteEntity('Pilot', id);\r\n  }\r\n\r\n  const onRowClicked = () => onPilotClicked(id);\r\n\r\n  const onRowRightClicked = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const { pageX, pageY } = e;\r\n    showContextMenu(pageX, pageY, 'PilotListItemMenu', {text : pilot.name, pilotId : id});\r\n  }\r\n\r\n  return (\r\n    <Table.Row onClick={onRowClicked}  onContextMenu={onRowRightClicked} active={selected}>\r\n      <Table.Cell>\r\n        {name}\r\n      </Table.Cell>\r\n      <Table.Cell>\r\n        {rank}\r\n      </Table.Cell>\r\n      <Table.Cell>\r\n        {age}\r\n      </Table.Cell>\r\n      <Table.Cell>\r\n        {gunnery} / {piloting}\r\n      </Table.Cell>\r\n      <Table.Cell>\r\n        {mechType}\r\n      </Table.Cell>\r\n      <Table.Cell>\r\n      <Button\r\n        compact\r\n        basic\r\n        circular\r\n        size=\"tiny\"\r\n        color=\"red\"\r\n        icon={<Icon name=\"delete\" />}\r\n        onClick={onDeleteClicked}\r\n      >\r\n\r\n      </Button>\r\n\r\n      </Table.Cell>\r\n\r\n    </Table.Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapState, actions)(PilotListRow);\r\n","import { createSelector } from 'reselect'\r\n\r\nconst selectPilots = (state) => state.pilots;\r\n\r\nexport const selectCurrentPilot = createSelector(\r\n  selectPilots,\r\n  pilots => pilots.currentPilot\r\n);\r\n\r\nexport const selectIsEditingPilot = createSelector(\r\n  selectPilots,\r\n  pilots => pilots.isEditing\r\n);\r\n","import {\r\n  EDIT_ITEM_EXISTING,\r\n  EDIT_ITEM_NEW,\r\n  EDIT_ITEM_UPDATE,\r\n  EDIT_ITEM_APPLY,\r\n  EDIT_ITEM_STOP,\r\n  EDIT_ITEM_RESET,\r\n} from './editingConstants';\r\n\r\n\r\nexport function editNewItem(itemType, itemID, newItemAttributes) {\r\n  return {\r\n    type : EDIT_ITEM_NEW,\r\n    payload : {\r\n      itemType,\r\n      itemID,\r\n      newItemAttributes,\r\n    },\r\n  };\r\n}\r\n\r\nexport function editExistingItem(itemType, itemID) {\r\n  return {\r\n    type : EDIT_ITEM_EXISTING,\r\n    payload : {\r\n      itemType,\r\n      itemID\r\n    },\r\n  };\r\n}\r\n\r\nexport function editItemAttributes(itemType, itemID, newItemAttributes) {\r\n  return {\r\n    type : EDIT_ITEM_UPDATE,\r\n    payload : {\r\n      itemType,\r\n      itemID,\r\n      newItemAttributes\r\n    },\r\n  };\r\n}\r\n\r\nexport function applyItemEdits(itemType, itemID) {\r\n  return {\r\n    type : EDIT_ITEM_APPLY,\r\n    payload : {\r\n      itemType,\r\n      itemID\r\n    },\r\n  };\r\n}\r\n\r\nexport function stopEditingItem(itemType, itemID) {\r\n  return {\r\n    type : EDIT_ITEM_STOP,\r\n    payload : {\r\n      itemType,\r\n      itemID\r\n    },\r\n  };\r\n}\r\n\r\nexport function resetEditedItem(itemType, itemID) {\r\n  return {\r\n    type : EDIT_ITEM_RESET,\r\n    payload : {\r\n      itemType,\r\n      itemID,\r\n    }\r\n  }\r\n}","import cuid from 'cuid';\r\n\r\nimport {\r\n  editExistingItem,\r\n  editNewItem,\r\n  stopEditingItem,\r\n  applyItemEdits\r\n} from '../../features/editing/editingActions';\r\n\r\nimport {\r\n  PILOT_SELECT,\r\n  PILOT_EDIT_START,\r\n  PILOT_EDIT_STOP\r\n} from './pilotsConstant';\r\n\r\nimport { selectCurrentPilot, selectIsEditingPilot } from './pilotsSelector';\r\nimport { getEntitiesSession, getUnsharedEntitiesSession } from '../entities/entitySelectors';\r\n\r\nexport function selectPilot(pilotID) {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    \r\n    const isEditing = selectIsEditingPilot(state);\r\n\r\n    if(isEditing) {\r\n      dispatch(cancelEditingPilot())\r\n    }\r\n\r\n    dispatch({\r\n      type : PILOT_SELECT,\r\n      payload : {currentPilot: pilotID}\r\n    })\r\n  }\r\n}\r\n\r\nexport function startEditingPilot() {\r\n  return (dispatch, getState) => {\r\n    const currentPilot = selectCurrentPilot(getState());\r\n\r\n    dispatch(editExistingItem('Pilot', currentPilot))\r\n    dispatch({\r\n      type: PILOT_EDIT_START\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport function handleStopEditingPilot(applyEdits = true) {\r\n  return (dispatch, getState) => {\r\n    const currentPilot = selectCurrentPilot(getState());\r\n\r\n    const session = getEntitiesSession(getState);\r\n    const {Pilot} = session;\r\n\r\n    const isNewPilot = !Pilot.hasId(currentPilot);\r\n\r\n    dispatch({type : PILOT_EDIT_STOP});\r\n\r\n    if(applyEdits) {\r\n      dispatch(applyItemEdits('Pilot', currentPilot));\r\n    }\r\n\r\n    dispatch(stopEditingItem('Pilot', currentPilot));\r\n\r\n    if(isNewPilot) {\r\n      dispatch({type : PILOT_SELECT, payload : {currentPilot : null}});\r\n    }\r\n  }\r\n}\r\n\r\nexport function stopEditingPilot() {\r\n  return (dispatch, getState) => {\r\n    dispatch(handleStopEditingPilot(true));    \r\n  }\r\n}\r\n\r\nexport function cancelEditingPilot() {\r\n  return (dispatch, getState) => {\r\n    dispatch(handleStopEditingPilot(false));\r\n  }\r\n}\r\n\r\nexport function addNewPilot() {\r\n  return (dispatch, getState) => {\r\n    const session = getUnsharedEntitiesSession(getState());\r\n    const {Pilot} = session;\r\n\r\n    const id = cuid();\r\n    \r\n    const newPilot = Pilot.generate({id});\r\n\r\n    const pilotContents = newPilot.toJSON();\r\n\r\n    dispatch(editNewItem('Pilot', id, pilotContents));\r\n    dispatch(selectPilot(id));\r\n    dispatch({ type : PILOT_EDIT_START });\r\n  } \r\n}\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PilotListHeader from './PilotListHeader'\r\nimport PilotListRow from './PilotListRow'\r\n\r\nimport { selectCurrentPilot } from '../pilotsSelector';\r\nimport { selectPilot } from '../pilotsActions'\r\n\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\n\r\n\r\nconst mapState = (state) => {\r\n  // Create a Redux-ORM Session from the entities slice, which\r\n  // contains the 'table' for each model class.\r\n  const session = getEntitiesSession(state)\r\n\r\n\r\n  // Retreive the model class that is needed. Each Session\r\n  // specifically \"binds\" model classes to itself, so that\r\n  // updates to model instances are applied to that session.\r\n  // These \"bound classes\" are available as fields in the sesssion.\r\n  const {Pilot} = session; \r\n\r\n  // Query the sessions for all instances.\r\n  // The Queryset returned from the all() can be used to \r\n  // retreive instances of the pilot class, or receive the plain\r\n  // JS object that are in the store\r\n\r\n  // The toModels modifiers will let us map over Model instances\r\n  // for each entry rather than the plain JS object\r\n\r\n  // Extract the list of IDs for each Pilot entry\r\n  const pilots = Pilot.all().toModelArray().map(pilotModel => pilotModel.getId());\r\n\r\n  const currentPilot = selectCurrentPilot(state);\r\n\r\n  // return the list of IDs and the current pilot ID as props\r\n  return {pilots, currentPilot};\r\n}\r\n\r\n\r\nconst actions = {\r\n  selectPilot\r\n}\r\n\r\n\r\nclass PilotList extends Component {\r\n    render() {\r\n        const {pilots, selectPilot, currentPilot} = this.props;\r\n        \r\n        const pilotRows = pilots.map(pilotID => (\r\n            <PilotListRow\r\n               key={pilotID}\r\n               pilotID={pilotID}\r\n               onPilotClicked={selectPilot}\r\n               selected={pilotID === currentPilot} />\r\n        ))\r\n\r\n        return (\r\n          <Table celled>\r\n            <PilotListHeader />\r\n            <Table.Body>\r\n              {pilotRows}\r\n            </Table.Body>\r\n          </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapState, actions)(PilotList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  Form,\r\n  Dropdown,\r\n  Grid,\r\n  Button,\r\n} from 'semantic-ui-react';\r\n\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\nimport { getEditingEntitiesSession } from '../../editing/editingSelectors';\r\n\r\nimport { selectCurrentPilot, selectIsEditingPilot } from '../pilotsSelector';\r\nimport { PILOT_RANKS } from '../pilotsConstant';\r\n\r\nimport { \r\n  startEditingPilot,\r\n  cancelEditingPilot,\r\n  stopEditingPilot,\r\n} from '../pilotsActions';\r\n\r\nimport {\r\n  resetEditedItem,\r\n} from '../../../features/editing/editingActions'\r\n\r\nimport {\r\n  editItemAttributes,\r\n} from '../../../features/editing/editingActions'\r\n\r\n\r\nimport { getValueFromEvent } from '../../../common/utils/clientUtils';\r\n\r\n\r\nconst RANKS = PILOT_RANKS.map(rank => ({ value: rank, text: rank}));\r\n\r\nconst SKILL_VALUES = [\r\n  {value : 0, text : 0},\r\n  {value : 1, text : 1},\r\n  {value : 2, text : 2},\r\n  {value : 3, text : 3},\r\n  {value : 4, text : 4},\r\n  {value : 5, text : 5},\r\n  {value : 6, text : 6},\r\n  {value : 7, text : 7},\r\n  {value : 8, text : 8},\r\n]\r\n\r\nconst MECHS = [\r\n  {value: 'WHM-6R', text : 'Warhammer WHM-6R'}\r\n];\r\n\r\n\r\nconst mapState = state => {\r\n  let pilot;\r\n\r\n  const currentPilot = selectCurrentPilot(state);\r\n  \r\n  const pilotIsSelected = Boolean(currentPilot);\r\n  const isEditingPilot = selectIsEditingPilot(state);\r\n\r\n  if(pilotIsSelected) {\r\n    const session = isEditingPilot ? \r\n      getEditingEntitiesSession(state) :\r\n      getEntitiesSession(state);\r\n\r\n    const {Pilot} = session;\r\n\r\n    if(Pilot.idExists(currentPilot)) {\r\n      pilot = Pilot.withId(currentPilot).ref;\r\n    }\r\n  }\r\n\r\n  return {pilot, pilotIsSelected, isEditingPilot}\r\n}\r\n\r\nconst actions = {\r\n  startEditingPilot,\r\n  stopEditingPilot,\r\n  editItemAttributes,\r\n  cancelEditingPilot,\r\n  resetEditedItem,\r\n}\r\n\r\n\r\nexport class PilotDetails extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.onInputChanged = this.onInputChanged.bind(this);\r\n    this.onDropdownChanged = this.onDropdownChanged.bind(this);\r\n    this.onStartEditingClicked = this.onStartEditingClicked.bind(this);\r\n    this.onStopEditingClicked = this.onStopEditingClicked.bind(this);\r\n    this.onResetClicked = this.onResetClicked.bind(this);\r\n  }\r\n\r\n  onStartEditingClicked () {\r\n    const {id} = this.props.pilot;\r\n    this.props.startEditingPilot()\r\n  }\r\n\r\n  onStopEditingClicked () {\r\n    const {id} = this.props.pilot;\r\n    this.props.stopEditingPilot()\r\n  }\r\n\r\n  onInputChanged (e) {\r\n    const newValues = getValueFromEvent(e);\r\n    const {id} = this.props.pilot;\r\n\r\n    this.props.editItemAttributes('Pilot', id, newValues);\r\n  }\r\n  \r\n  onDropdownChanged (e, result) {\r\n    const {name, value} = result;\r\n    const newValues = {[name] : value};\r\n    const {id} = this.props.pilot;\r\n    \r\n    this.props.editItemAttributes('Pilot', id, newValues);\r\n  }\r\n\r\n  onResetClicked () {\r\n    const {id} = this.props.pilot;\r\n    this.props.resetEditedItem('Pilot', id)\r\n  }\r\n  \r\n  render() {  \r\n    const { pilot={}, pilotIsSelected=false, isEditingPilot=false } = this.props\r\n\r\n    const {\r\n      name = \"\",\r\n      rank = \"\",\r\n      age = \"\",\r\n      gunnery = \"\",\r\n      piloting = \"\",\r\n      mechType = \"\",\r\n    } = pilot;\r\n  \r\n    const canStartEditing = pilotIsSelected && !isEditingPilot;\r\n    const canStopEditing = pilotIsSelected && isEditingPilot;\r\n\r\n    const buttonWidth = 140;\r\n  \r\n  \r\n    return (\r\n      <Form size=\"large\">\r\n        <Form.Field\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            width={16}\r\n            control=\"input\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              disabled={!canStopEditing}\r\n              onChange={this.onInputChanged}\r\n              />\r\n        <Form.Group>\r\n          <Form.Field\r\n              name=\"rank\"\r\n              label=\"Rank\"\r\n              width={16}\r\n              control={Dropdown}\r\n                fluid\r\n                selection\r\n                options={RANKS}\r\n                value={rank}\r\n                disabled={!canStopEditing}\r\n                onChange={this.onDropdownChanged}\r\n                />\r\n          <Form.Field\r\n              name=\"age\"\r\n              label=\"Age\"\r\n              width={6}\r\n              control=\"input\"\r\n              placeholder=\"Age\"\r\n              value={age}\r\n              disabled={!canStopEditing}\r\n              onChange={this.onInputChanged}\r\n              />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Field\r\n              name=\"gunnery\"\r\n              label=\"Gunnery\"\r\n              width={6}\r\n              control={Dropdown}\r\n              fluid\r\n              selection\r\n              options={SKILL_VALUES}\r\n              value={gunnery}\r\n              disabled={!canStopEditing}\r\n              onChange={this.onDropdownChanged}\r\n              />\r\n          <Form.Field\r\n              name=\"piloting\"\r\n              label=\"Piloting\"\r\n              width={6}\r\n              control={Dropdown}\r\n              fluid\r\n                selection\r\n                options={SKILL_VALUES}\r\n                value={piloting}\r\n                disabled={!canStopEditing}\r\n                onChange={this.onDropdownChanged}\r\n                />\r\n        </Form.Group>\r\n\r\n        <Form.Field\r\n            name=\"mech\"\r\n            label=\"Mech\"\r\n            width={16}\r\n            control={Dropdown}\r\n              fluid\r\n              selection\r\n              options={MECHS}\r\n              value={mechType}\r\n              disabled={!canStopEditing}\r\n              onChange={this.onDropdownChanged}\r\n              />\r\n        <Grid.Row width={16}>\r\n          <Button\r\n            primary\r\n            disabled={!canStartEditing}\r\n            type=\"button\"\r\n            style={{width : buttonWidth}}\r\n            onClick={this.onStartEditingClicked} \r\n            >\r\n              Start Editing\r\n          </Button>\r\n          <Button\r\n            secondary\r\n            disabled={!canStopEditing}\r\n            type=\"button\"\r\n            style={{width : buttonWidth}}\r\n            onClick={this.onStopEditingClicked}\r\n            >\r\n              Save Editing\r\n          </Button>\r\n  \r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Button\r\n            disabled={!canStopEditing}\r\n            type=\"button\"\r\n            style={{width : buttonWidth, marginRight : 5}}\r\n            onClick={this.onResetClicked} \r\n            >\r\n              Reset Values\r\n          </Button>\r\n          <Button\r\n            negative\r\n            secondary\r\n            disabled={!canStopEditing}\r\n            type=\"button\"\r\n            style={{width : buttonWidth}}\r\n            onClick={this.props.cancelEditingPilot} \r\n            >\r\n              Cancel Edits\r\n          </Button>\r\n\r\n        </Grid.Row>\r\n      </Form>       \r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapState, actions)(PilotDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nimport { selectIsEditingPilot } from '../pilotsSelector';\r\nimport { addNewPilot } from '../pilotsActions';\r\n\r\n\r\nconst mapState = (state) => {\r\n  const isEditingPilot = selectIsEditingPilot(state);\r\n\r\n  return {isEditingPilot};\r\n}\r\n\r\nconst buttonWidth = 140;\r\n\r\nconst actions = {\r\n  addNewPilot,\r\n}\r\n\r\n\r\nconst PilotCommands = (props) => (\r\n  <Button\r\n    primary\r\n    disabled={props.selectIsEditingPilot}\r\n    type=\"button\"\r\n    onClick={props.addNewPilot}\r\n    style={{width: buttonWidth, marginRight : 10}}\r\n  >\r\n    Add New Pilot\r\n  </Button>\r\n)\r\n\r\nexport default connect(mapState, actions)(PilotCommands);\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Grid,\r\n    Segment,\r\n    Header,\r\n} from 'semantic-ui-react';\r\n\r\nimport PilotList from '../PilotList'\r\nimport PilotDetails from '../PilotDetails';\r\nimport PilotCommands from '../PilotDetails/PilotCommands';\r\n\r\nexport default class Pilots extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={10}>\r\n                    <Header as=\"h3\">Pilot List</Header>\r\n                    <PilotList />\r\n                </Grid.Column>\r\n                <Grid.Column width={6}>\r\n                  <Header as=\"h3\">Pilot Details</Header>\r\n                  <Segment>\r\n                    <PilotDetails />\r\n                  </Segment>\r\n                  <Segment>\r\n                    <PilotCommands />\r\n                  </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst MechsListHeader = () => (\r\n        <Table.Header>\r\n\r\n            <Table.Row>\r\n                <Table.HeaderCell width={2}>\r\n                  ID\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell width={5}>\r\n                  Name\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell width={3}>\r\n                  Model\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell width={3}>\r\n                  Weight (tons)\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell width={2}>\r\n                  Class\r\n                </Table.HeaderCell>\r\n            </Table.Row>\r\n\r\n        </Table.Header>\r\n)\r\n\r\nexport default MechsListHeader;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst WEIGHT_CLASSES = [\r\n    {name : \"Light\", weights : [20, 25, 30, 35]},\r\n    {name : \"Medium\", weights : [40, 45, 50, 55]},\r\n    {name : \"Heavy\", weights : [60, 65, 70, 75]},\r\n    {name : \"Assault\", weights : [80, 85, 90, 95, 100]},\r\n];\r\n\r\nexport function getWeightClass(weight) {\r\n    const weightClass = WEIGHT_CLASSES.find(wc => wc.weights.includes(weight)) || {name : 'Unknown'};\r\n    return weightClass.name;\r\n}\r\n\r\nconst selectMechs = state => state.mechs;\r\n\r\nexport const selectCurrentMech = createSelector(\r\n    selectMechs,\r\n    mechs => mechs.currentMech\r\n)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nimport { getWeightClass } from '../mechSelectors';\r\n\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\n\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const session = getEntitiesSession(state);\r\n  const {Mech} = session;\r\n\r\n  let mech;\r\n\r\n  if(Mech.idExists(ownProps.mechID)) {\r\n    const mechModel = Mech.withId(ownProps.mechID)\r\n\r\n    mech = {\r\n      // Copy the data from the plain JS object\r\n      ...mechModel.ref,\r\n      // Provide a default object with a copy of the relations's data\r\n      mechType : {}\r\n    }\r\n\r\n    if(mechModel.type) {\r\n      mech.mechType = {...mechModel.type.ref }\r\n    }\r\n  }\r\n  \r\n  return {mech}\r\n}\r\n\r\n\r\nconst MechsListRow = ({ mech = {}, onMechClick, selected }) => {\r\n  const {\r\n    id = null,\r\n    type = '',\r\n    mechType = {},\r\n  } = mech;\r\n\r\n  const {\r\n    name = '',\r\n    weight = '',\r\n  } = mechType;\r\n\r\n  const weightClass = getWeightClass(weight);\r\n\r\n\r\n  return (\r\n      <Table.Row onClick={() => onMechClick(id)} active={selected}>\r\n        <Table.Cell>\r\n          {id}\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          {name}\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          {type}\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          {weight}\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          {weightClass}\r\n        </Table.Cell>\r\n      </Table.Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapState)(MechsListRow);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nimport MechsListHeader from './MechsListHeader'\r\nimport MechsListRow from './MechsListRow';\r\n\r\nimport { selectCurrentMech } from '../mechSelectors';\r\nimport { selectMech } from '../mechsActions'\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\n\r\n\r\nconst mapState = (state) => {\r\n  const session = getEntitiesSession(state);\r\n\r\n  const {Mech} = session;\r\n\r\n  const mechs = Mech.all().toModelArray().map(mechModel => mechModel.getId())\r\n\r\n  const currentMech = selectCurrentMech(state);\r\n\r\n  return {mechs, currentMech}\r\n}\r\n\r\n\r\nconst actions = {\r\n  selectMech,\r\n}\r\n\r\n\r\nclass MechsList extends Component {\r\n\r\n  render() {\r\n    const { mechs = [], currentMech, selectMech } = this.props;\r\n    \r\n    const mechRows = mechs.map(mechID => (\r\n      <MechsListRow\r\n        mechID={mechID}\r\n        key={mechID}\r\n        onMechClick={selectMech}\r\n        selected={mechID === currentMech}\r\n         />\r\n    ));\r\n\r\n    return (\r\n      <Table celled>\r\n\r\n        <MechsListHeader />\r\n        {mechRows}\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapState, actions)(MechsList);\r\n","import { MECH_SELECT } from './mechsConstants';\r\n\r\nexport function selectMech(mechId) {\r\n  return {\r\n    type: MECH_SELECT,\r\n    payload: { currentMech: mechId }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getWeightClass, selectCurrentMech } from '../mechSelectors';\r\n\r\nimport { getEntitiesSession } from '../../entities/entitySelectors';\r\n\r\n\r\nconst mapState = (state) => {\r\n  let mech;\r\n\r\n  const currentMech = selectCurrentMech(state);\r\n\r\n  const session = getEntitiesSession(state);\r\n\r\n  const {Mech} = session;\r\n\r\n  if(Mech.idExists(currentMech)) {\r\n    const mechModel = Mech.withId(currentMech);\r\n    mech = {\r\n      // Copy the data from the plain JS Object\r\n      ...mechModel.ref,\r\n      mechType : {}\r\n    }\r\n\r\n    if(mechModel.type) {\r\n      mech.mechType = mechModel.type.ref;\r\n    }\r\n  }\r\n\r\n  return {mech}\r\n}\r\n\r\n\r\nconst MechDetails = ({ mech={}} ) => {\r\n  const {\r\n    id = '',\r\n    type = '',\r\n    mechType = {},\r\n  } = mech;\r\n  \r\n  const {\r\n    name = '',\r\n    weight = '',\r\n  } = mechType;\r\n\r\n  const weightClass = getWeightClass(weight);\r\n  \r\n  return (\r\n    <Form size=\"large\">\r\n      <Form.Field name=\"id\" width={6} >\r\n          <label>ID</label>\r\n          <input \r\n          placeholder=\"ID\"\r\n          value={id}\r\n          disabled={true}\r\n          />\r\n      </Form.Field>\r\n      <Form.Field name=\"name\" width={16} >\r\n          <label>Name</label>\r\n          <input \r\n          placeholder=\"Name\"\r\n          value={name}\r\n          disabled={true}\r\n          />\r\n      </Form.Field>\r\n      <Form.Field name=\"model\" width={6} >\r\n          <label>Model</label>\r\n          <input \r\n          placeholder=\"Model\"\r\n          value={type}\r\n          disabled={true}\r\n          />\r\n      </Form.Field>\r\n      <Form.Field name=\"weight\" width={6} >\r\n          <label>Weight</label>\r\n          <input \r\n          value={weight}\r\n          disabled={true}\r\n          />\r\n      </Form.Field>\r\n      <Form.Field name=\"class\" width={6} >\r\n          <label>Class</label>\r\n          <input \r\n          value={weightClass}\r\n          disabled={true}\r\n          />\r\n      </Form.Field>\r\n\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default connect(mapState)(MechDetails);\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n} from 'semantic-ui-react';\r\n\r\nimport MechList from '../MechList'\r\nimport MechDetails from '../MechDetails'\r\n\r\n\r\nexport default class Mechs extends Component {\r\n  \r\n  render () {\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid>\r\n          <Grid.Column width={10}>\r\n            <Header as=\"h3\">Mechs List</Header>\r\n              <MechList />\r\n          </Grid.Column>\r\n          <Grid.Column width={6}>\r\n            <Segment>\r\n              <MechDetails />\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    )\r\n  }\r\n}\r\n","const sampleData = {\r\n  unit : {\r\n      name : \"Black Widow Company\",\r\n      affiliation : \"wd\",\r\n      color : \"green\",\r\n      lances : [\r\n        {\r\n            id : 1,\r\n            name : \"Command Lance\",\r\n            pilots : [\r\n                1, 2, 3, 4\r\n            ]\r\n        },\r\n        {\r\n            id : 2,\r\n            name : \"Fire Lance\",\r\n            pilots : [\r\n                5, 6, 7, 8\r\n            ]\r\n        },\r\n        {\r\n            id : 3,\r\n            name : \"Recon Lance\",\r\n            pilots : [\r\n                9, 10, 11, 12\r\n            ]\r\n        }\r\n      ],\r\n      pilots : [\r\n        {\r\n            id : 1,\r\n            name : \"Natasha Kerensky\",\r\n            rank : \"Captain\",\r\n            gunnery : 2,\r\n            piloting : 2,\r\n            age : 52,\r\n            mech : 1,\r\n        },\r\n      {\r\n          id : 2,\r\n          name : \"Colin Maclaren\",\r\n          rank : \"Sergeant\",\r\n          gunnery : 3,\r\n          piloting : 4,\r\n          age : 43,\r\n          mech : 2,\r\n      },\r\n      {\r\n          id : 3,\r\n          name : \"Lynn Sheridan\",\r\n          rank : \"Corporal\",\r\n          gunnery : 4,\r\n          piloting : 5,\r\n          age : 27,\r\n          mech : 3,\r\n      },\r\n      {\r\n          id : 4,\r\n          name : \"John Hayes\",\r\n          rank : \"Sergeant\",\r\n          gunnery : 3,\r\n          piloting : 4,\r\n          age : 34,\r\n          mech : 4,\r\n      },\r\n      {\r\n          id : 5,\r\n          name : \"Takiro Ikeda\",\r\n          rank : \"Lieutenant\",\r\n          gunnery : 3,\r\n          piloting : 4,\r\n          age : 41,\r\n          mech : 5,\r\n      },\r\n      {\r\n          id : 6,\r\n          name : \"Miklos Delius\",\r\n          rank : \"Corporal\",\r\n          gunnery : 4,\r\n          piloting : 4,\r\n          age : 31,\r\n          mech : 6,\r\n      },\r\n      {\r\n          id : 7,\r\n          name : \"Nikolai Koniev\",\r\n          rank : \"Private\",\r\n          gunnery : 3,\r\n          piloting : 4,\r\n          age : 39,\r\n          mech : 7,\r\n      },\r\n      {\r\n          id : 8,\r\n          name : \"Alex Ward\",\r\n          rank : \"Corporal\",\r\n          gunnery : 4,\r\n          piloting : 5,\r\n          age : 36,\r\n          mech : 8,\r\n      },\r\n      {\r\n          id : 9,\r\n          name : \"John Clavell\",\r\n          rank : \"Lieutenant\",\r\n          gunnery : 3,\r\n          piloting : 4,\r\n          age : 40,\r\n          mech : 9,\r\n      },\r\n      {\r\n          id : 10,\r\n          name : \"Piet Nichols\",\r\n          rank : \"Corporal\",\r\n          gunnery : 4,\r\n          piloting : 5,\r\n          age : 37,\r\n          mech : 10,\r\n      },\r\n      {\r\n          id : 11,\r\n          name : \"Simon Fraser\",\r\n          rank : \"Sergeant\",\r\n          gunnery : 3,\r\n          piloting : 4,\r\n          age : 32,\r\n          mech : 11,\r\n      },\r\n      {\r\n          id : 12,\r\n          name : \"Mohammar Jahan\",\r\n          rank : \"Corporal\",\r\n          gunnery : 3,\r\n          piloting : 5,\r\n          age : 29,\r\n          mech : 12,\r\n      },\r\n    ],\r\n    mechs : [\r\n        {\r\n            id : 1,\r\n            type : \"WHM-6R\",\r\n            pilot : 1,\r\n        },\r\n        {\r\n            id : 2,\r\n            type : \"MAD-3R\",\r\n            pilot : 2,\r\n        },\r\n        {\r\n            id : 3,\r\n            type : \"CRD-3R\",\r\n            pilot : 3,\r\n        },\r\n        {\r\n            id : 4,\r\n            type : \"GRF-1N\",\r\n            pilot : 4,\r\n        },\r\n        {\r\n            id : 5,\r\n            type : \"ARC-2R\",\r\n            pilot : 5,\r\n        },\r\n        {\r\n            id : 6,\r\n            type : \"ARC-2R\",\r\n            pilot : 6,\r\n        },\r\n        {\r\n            id : 7,\r\n            type : \"WSP-1A\",\r\n            pilot : 7,\r\n        },\r\n        {\r\n            id : 8,\r\n            type : \"STG-3R\",\r\n            pilot : 8,\r\n        },\r\n        {\r\n            id : 9,\r\n            type : \"RFL-3N\",\r\n            pilot : 9,\r\n        },\r\n        {\r\n            id : 10,\r\n            type : \"PXH-1K\",\r\n            pilot : 10,\r\n        },\r\n        {\r\n            id : 11,\r\n            type : \"STG-3R\",\r\n            pilot : 11,\r\n        },\r\n        {\r\n            id : 12,\r\n            type : \"STG-3R\",\r\n            pilot : 12,\r\n        }\r\n    ],\r\n  },\r\n    designs : [\r\n        {\r\n            id : \"STG-3R\",\r\n            name : \"Stinger\",\r\n            weight : 20,\r\n        },\r\n        {\r\n            id : \"WSP-1A\",\r\n            name : \"Wasp\",\r\n            weight : 20,\r\n        },\r\n        {\r\n            id : \"PXH-1K\",\r\n            name : \"Phoenix Hawk\",\r\n            weight : 45,\r\n        },\r\n        {\r\n            id : \"GRF-1N\",\r\n            name : \"Griffin\",\r\n            weight : 55,\r\n        },\r\n        {\r\n            id : \"RFL-3N\",\r\n            name : \"Rifleman\",\r\n            weight : 60,\r\n        },\r\n        {\r\n            id : \"CRD-3R\",\r\n            name : \"Crusader\",\r\n            weight : 65,\r\n        },\r\n        {\r\n            id : \"ARC-2R\",\r\n            name : \"Archer\",\r\n            weight : 70,\r\n        },\r\n        {\r\n            id : \"WHM-6R\",\r\n            name : \"Warhammer\",\r\n            weight : 70,\r\n        },\r\n        {\r\n            id : \"MAD-3R\",\r\n            name : \"Marauder\",\r\n            weight : 75,\r\n        },\r\n    ],\r\n\r\n    factions : [\r\n        {id : \"cc\", name : \"Capellan Confederation\"},\r\n        {id : \"dc\", name : \"Draconis Combine\"},\r\n        {id : \"elh\", name : \"Eridani Light Horse\"},\r\n        {id : \"fs\", name : \"Federated Suns\"},\r\n        {id : \"fwl\", name : \"Free Worlds League\"},\r\n        {id : \"hr\", name : \"Hansen's Roughriders\"},\r\n        {id : \"lc\", name : \"Lyran Commonwealth\"},\r\n        {id : \"wd\", name : \"Wolf's Dragoons\"},\r\n      ]\r\n}\r\n\r\nexport default sampleData;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Segment,\r\n  Button,\r\n} from 'semantic-ui-react';\r\n\r\nimport { loadUnitData } from '../toolActions';\r\nimport { openModal } from '../../modals/modalActions';\r\nimport { showContextMenu } from '../../contextMenu/contextMenuActions';\r\n\r\nconst actions = {\r\n  loadUnitData,\r\n  openModal,\r\n  showContextMenu,\r\n}\r\n\r\nclass Tools extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.onOpenModalClicked = this.onOpenModalClicked.bind(this);\r\n    this.onOpenTestModalClicked = this.onOpenTestModalClicked.bind(this);\r\n    this.onShowContextMenuClicked = this.onShowContextMenuClicked.bind(this);\r\n  }\r\n\r\n  onShowContextMenuClicked () {\r\n    this.props.showContextMenu(600, 200, 'TestContextMenu', {text: 'Blah'});\r\n  }\r\n\r\n  onOpenModalClicked () {\r\n    this.props.openModal('ColorPickerDialog');\r\n  }\r\n  \r\n  onOpenTestModalClicked () {\r\n    this.props.openModal('TestModal', {counter : 1});\r\n  }\r\n\r\n  render() {\r\n    const { loadUnitData } = this.props;\r\n  \r\n    return (\r\n      <Segment attached=\"bottom\">\r\n        <Button onClick={loadUnitData}>Reload Unit Data</Button>\r\n        <Button primary onClick={this.onOpenModalClicked}>Show Color Picker</Button>\r\n        <Button secondary onClick={this.onOpenTestModalClicked}>Show Test Modal</Button>\r\n        <Button secondary onClick={this.onShowContextMenuClicked}>Show Test Context Menu</Button>\r\n\r\n      </Segment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(Tools);\r\n","import { fetchData } from '../../data/mockAPI';\r\n\r\nimport { DATA_LOADED } from './toolConstant'\r\n\r\nexport function loadUnitData() {\r\n    return (dispatch, getState) => {\r\n      fetchData()\r\n        .then(data => {\r\n          dispatch({\r\n            type: DATA_LOADED,\r\n            payload: data\r\n          })\r\n        });\r\n    }\r\n}\r\n","import sampleData from './sampleData';\r\n\r\nexport function fetchData() {\r\n  return Promise.resolve(sampleData);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Modal,\r\n  Button\r\n} from 'semantic-ui-react';\r\n\r\nimport { openModal, closeModal } from './modalActions';\r\n\r\nconst actions = { openModal, closeModal };\r\n\r\nexport class TestModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.onNextModalClick = this.onNextModalClick.bind(this);\r\n  }\r\n\r\n  onNextModalClick () {\r\n    const {counter} = this.props;\r\n\r\n    this.props.openModal('TestModal', {counter : counter + 1})\r\n  }\r\n\r\n  render() {\r\n    const { counter, closeModal } = this.props;\r\n\r\n    return (\r\n      <Modal \r\n        closeIcon=\"close\"\r\n        open={true}\r\n        onClose={closeModal}\r\n      >\r\n        <Modal.Header>Modal #</Modal.Header>\r\n        <Modal.Content image>\r\n          <Modal.Description>\r\n            <h4>\r\n              value from props:\r\n            </h4>\r\n            <div>\r\n              counter = {counter}\r\n            </div>\r\n            <div>\r\n              <Button onClick={this.onNextModalClick}>Add Another Modal</Button>\r\n            </div>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n\r\n        </Modal.Actions>\r\n\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(TestModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Modal,\r\n  Button,\r\n} from 'semantic-ui-react';\r\n\r\nimport { SketchPicker } from 'react-color';\r\n\r\nimport { closeModal } from '../../../features/modals/modalActions';\r\nimport { colorSelected } from '../../components/ColorPicker/colorPickerAction';\r\n\r\nconst actions = {\r\n  closeModal,\r\n  colorSelected,\r\n};\r\n\r\n\r\nexport class ColorPickerDialog extends Component {\r\n  constructor(props) {\r\n\r\n    super();\r\n    this.state = {\r\n      color : props.color\r\n    }\r\n    this.onSelectClicked = this.onSelectClicked.bind(this);\r\n    this.onSelectedColorChanged = this.onSelectedColorChanged.bind(this);\r\n  }\r\n\r\n  onSelectClicked () {\r\n    this.props.colorSelected(this.state.color, this.props.onColorPicked);\r\n    this.props.closeModal();\r\n  }\r\n \r\n  onSelectedColorChanged (colorEvent) {\r\n\r\n    this.setState({color : colorEvent.hex});\r\n  }\r\n\r\n\r\n  render() {\r\n    const {closeModal} = this.props;\r\n    \r\n    return (\r\n    <Modal\r\n      closeIcon=\"close\"\r\n      open={true}\r\n      onClose={closeModal}\r\n      size=\"small\"\r\n    >\r\n      <Modal.Header>Select Color</Modal.Header>\r\n      <Modal.Content>\r\n        <SketchPicker\r\n          color={this.state.color}\r\n          onChangeComplete={this.onSelectedColorChanged}\r\n        />\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button positive onClick={this.onSelectClicked}>Select</Button>\r\n        <Button positive onClick={closeModal}>Cancel</Button>\r\n      </Modal.Actions>\r\n\r\n    </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nColorPickerDialog.defaultProps = {\r\n  color : \"red\",\r\n}\r\n\r\nexport default connect(null, actions)(ColorPickerDialog);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TestModal from './testModal';\r\nimport ColorPickerDialog from '../../common/components/ColorPicker/ColorPickerDialog';\r\n\r\n// A table containing a list of the Modal components\r\nconst modalComponentLookUpTable = {\r\n  TestModal,\r\n  ColorPickerDialog,\r\n}\r\n\r\nconst mapState = state => ({ currentModal : state.modals});\r\n\r\nexport class ModalManager extends Component {\r\n  render() {\r\n    const {currentModal} = this.props;\r\n\r\n    const renderedModal = currentModal.map( (modalDescription, index) => {\r\n      const {modalType, modalProps = {}} = modalDescription;\r\n      const ModalComponent = modalComponentLookUpTable[modalType];\r\n\r\n      return <ModalComponent {...modalProps} key={modalType + index} />\r\n    })\r\n\r\n    return <span>{renderedModal}</span>\r\n  }  \r\n}\r\n\r\nexport default connect(mapState)(ModalManager);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AbsolutePosition = (props) => {\r\n  const { children, nodeRef } = props;\r\n\r\n  const style = {\r\n    position : 'absolute',\r\n    top : 400,\r\n    bottom : 100,\r\n    left : props.left,\r\n    right : props.right,\r\n    width : props.width,\r\n  };\r\n\r\n  return (\r\n    <div style={style} className={props.className} ref={nodeRef}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nAbsolutePosition.propTypes = {\r\n  top : PropTypes.number,\r\n  bottom : PropTypes.number,\r\n  left : PropTypes.number,\r\n  right : PropTypes.number,\r\n  width : PropTypes.number,\r\n}\r\n\r\nexport default AbsolutePosition;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AbsolutePosition from '../../common/components/AbsolutePosition';\r\n\r\nimport { hideContextMenu } from './contextMenuActions'\r\n\r\n\r\nconst actions = {\r\n  hideContextMenu,\r\n};\r\n\r\nexport class ContextMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('click', this.handleClickOutside, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.addEventListener('click', this.handleClickOutside, true)\r\n  }\r\n\r\n  handleClickOutside (e) {\r\n    if(!this.node || this.node.contains(e.target)) {\r\n      return this.props.hideContextMenu();\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { location } = this.props;\r\n\r\n    return (\r\n      <AbsolutePosition\r\n      left={location.x + 2}\r\n      right={location.y}\r\n      className='contextMenu'\r\n      nodeRef={node => this.node = node}\r\n      >\r\n        {this.props.children}\r\n      </AbsolutePosition>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(ContextMenu);\r\n","export const selectContextMenu = state => state.contextMenu;\r\n","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nexport class TestContextMenu extends Component {\r\n  render () {\r\n    return (\r\n      <Menu vertical>\r\n        <Menu.Item>\r\n          <Menu.Header>menu Header: {this.props.text}</Menu.Header>\r\n\r\n          <Menu.Menu>\r\n            <Menu.Item>First Menu Item</Menu.Item>\r\n            <Menu.Item>Second Menu Item</Menu.Item>\r\n          </Menu.Menu>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport { selectPilot } from '../pilotsActions';\r\nimport { hideContextMenu } from '../../contextMenu/contextMenuActions';\r\nimport { deleteEntity } from '../../entities/entityActions';\r\n\r\n\r\nconst actions = {\r\n  selectPilot,\r\n  hideContextMenu,\r\n  deleteEntity,\r\n};\r\n\r\n\r\nexport class PilotListItemMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSelectClicked = this.onSelectClicked.bind(this);\r\n    this.onDeleteClicked = this.onDeleteClicked.bind(this);\r\n  }\r\n\r\n  onSelectClicked () {\r\n    this.props.selectPilot(this.props.pilotId);\r\n    this.props.hideContextMenu();\r\n  }\r\n  \r\n  onDeleteClicked () {\r\n    this.props.deleteEntity('Pilot', this.props.pilotId)\r\n    this.props.hideContextMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu vertical>\r\n        <Menu.Header>Pilot: {this.props.text}</Menu.Header>\r\n\r\n        <Menu.Menu>\r\n          <Menu.Item onClick={this.onSelectClicked }>Select Pilot</Menu.Item>\r\n          <Menu.Item onClick={this.onDeleteClicked}>Delete Pilot</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(PilotListItemMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Portal } from 'react-portal';\r\n\r\nimport ContextMenu from './ContextMenu';\r\n\r\nimport { selectContextMenu } from './contextMenuSelectors';\r\nimport { TestContextMenu } from './TestContextMenu'\r\nimport { PilotListItemMenu } from '../pilots/PilotList/PilotListItemMenu';\r\n\r\nconst menuType = {\r\n  TestContextMenu,\r\n  PilotListItemMenu,\r\n};\r\n\r\nexport function contextMenuManagerMapState(state) {\r\n  return {\r\n    contextMenu : selectContextMenu(state),\r\n  }\r\n}\r\n\r\nexport class ContextMenuManager extends Component {\r\n  render() {\r\n    const { contextMenu } = this.props;\r\n    const { show, location, type, menuArgs } = contextMenu;\r\n    \r\n    let menu = null;\r\n\r\n    if(show) {\r\n      let MenuComponent = menuType[type];\r\n\r\n      if(MenuComponent) {\r\n        menu = (\r\n          <Portal isOpened={true}>\r\n            <ContextMenu location={location}>\r\n              <MenuComponent {...menuArgs} />\r\n            </ContextMenu>\r\n          </Portal>\r\n        )\r\n      }\r\n    }\r\n\r\n    return menu;\r\n  }\r\n}\r\n\r\nexport default connect(contextMenuManagerMapState)(ContextMenuManager);\r\n","import React, { Component } from 'react';\nimport TabBarContainer from '../../features/tabs/TabBarContainer';\nimport UnitInfo from '../../features/unitInfo/UnitInfo/';\nimport Pilots from '../../features/pilots/Pilots/';\nimport Mechs from '../../features/mechs/Mechs/';\nimport Tools from '../../features/tools/Tools/';\nimport ModalManager from '../../features/modals/modalManager';\nimport ContextMenuManager from '../../features/contextMenu/ContextMenuManager'\n\nimport './App.css';\nimport logo from './logos.svg';\n\nimport {\n  Header,\n  Container,\n} from 'semantic-ui-react'\n\n\nclass App extends Component {\n\n    render() {\n        const tabs = [\n            { name: 'unitInfo', label: 'Unit Info', component: UnitInfo },\n            { name: 'pilots', label: 'Pilots', component: Pilots },\n            { name: 'mechs', label: 'Mechs', component: Mechs },\n            { name: 'tools', label: 'Tools', component: Tools }\n        ]\n                \n        return (\n        <div className=\"App\">\n            <ModalManager />\n            <ContextMenuManager />\n            <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            <Header inverted as=\"h1\">Mini-MekHQ</Header>\n        </div>\n        <Container>\n            <TabBarContainer tabs={tabs} size='massive' />\n        </Container>\n        </div>\n        )\n    }\n}\n\nexport default App;\n","export function createReducer(initialState, fnMap) {\r\n    return (state = initialState, {type, payload}) => {\r\n        const handler = fnMap[type];\r\n\r\n        return handler ? handler(state, payload) : state;\r\n    };\r\n}\r\n\r\nexport function reduceReducers(...reducers) {\r\n    return (previous, current) =>\r\n        reducers.reduce(\r\n            (p, r) => r(p, current),\r\n            previous\r\n        );\r\n}\r\n\r\n\r\n\r\nexport function createConditionalSliceReducer(sliceName, fnMap) {\r\n    // Create a reducer that know how to handle one lsice of state, with these action types\r\n    const sliceReducer = createReducer({}, fnMap);\r\n\r\n    // Creating a new wrapping reducer\r\n    return (state, action) => {\r\n        // Check to see if this slice reducer knows how to handle this action\r\n        if(fnMap[action.type]) {\r\n            // If it does, pass the slice to the slice reducer, and update the slice\r\n            return {\r\n                ...state,\r\n                [sliceName] : sliceReducer(state[sliceName], action),\r\n            };\r\n        }\r\n\r\n        // Otherwise return the existing state unchanged\r\n        return state;\r\n    }\r\n}\r\n","import {createReducer} from \"../../common/utils/reducerUtils\";\r\nimport {TAB_SELECTED} from \"./tabConstants\";\r\n\r\nconst initialState = {\r\n    currentTab : \"unitInfo\"\r\n};\r\n\r\nexport function selectTab(state, payload) {\r\n    return {\r\n        currentTab: payload.tabName,\r\n    };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [TAB_SELECTED] : selectTab,\r\n})\r\n","import orm from '../../app/orm';\r\nimport { createConditionalSliceReducer } from '../../common/utils/reducerUtils';\r\n\r\nimport {\r\n  UNIT_INFO_UPDATE,\r\n  UNIT_INFO_SET_COLOR,\r\n} from './unitInfoConstants';\r\n\r\n\r\nexport function updateUnitInfo(state, payload) {\r\n  const session = orm.session(state);\r\n  const {Unit} = session;\r\n  \r\n  const currentUnit = Unit.all().first();\r\n  \r\n  if(currentUnit) {\r\n    currentUnit.update(payload);\r\n  }\r\n\r\n  return session.state;\r\n}\r\n\r\n\r\n// Create an action to set the unit color\r\nexport function setUnitColor(state, payload) {\r\n  const {color} = payload;\r\n  const session = orm.session(state);\r\n  const {Unit} = session;\r\n\r\n  const currentUnit = Unit.all().first();\r\n\r\n  if(currentUnit) {\r\n    currentUnit.color = color;\r\n  }\r\n\r\n  return session.state;\r\n}\r\n\r\n\r\nexport default createConditionalSliceReducer('entities', {\r\n  [UNIT_INFO_UPDATE] : updateUnitInfo,\r\n  [UNIT_INFO_SET_COLOR] : setUnitColor,\r\n});\r\n","import { createReducer } from '../../common/utils/reducerUtils';\r\n\r\nimport orm from '../orm';\r\nimport { DATA_LOADED } from '../../features/tools/toolConstant';\r\n\r\nconst initialState = orm.getEmptyState();\r\n\r\nexport function loadData(state, payload) {\r\n  // Create a Redux-ORM Session from our entities 'tables'\r\n  const session = orm.session(state);\r\n\r\n  // Get a reference to the correct version of the Pilot class for this session\r\n  const { Unit, Faction, Pilot, Mech, MechDesign } = session;\r\n  \r\n  const { unit, factions, designs } = payload;\r\n\r\n  [Unit, Faction, Pilot, Mech, MechDesign].forEach(modelType => {\r\n    modelType.all().toModelArray().forEach(model => model.delete());\r\n  })\r\n\r\n  // Imutably update the Unit session state as we insert items\r\n  Unit.parse(unit);\r\n\r\n  factions.forEach(faction => Faction.parse(faction));\r\n  designs.forEach(design => MechDesign.parse(design));\r\n  \r\n  // Apply the queue update\r\n  // Return the new 'tables' object containing the updates\r\n  return session.state;\r\n}\r\n\r\n\r\nexport default createReducer(initialState, {\r\n  [DATA_LOADED] : loadData\r\n});\r\n","import { createReducer } from '../../common/utils/reducerUtils';\r\n\r\nimport {\r\n  PILOT_SELECT,\r\n  PILOT_EDIT_START,\r\n  PILOT_EDIT_STOP\r\n} from './pilotsConstant';\r\nimport { ENTITY_DELETE } from '../entities/entityConstants';\r\n\r\nconst initialState = {\r\n  currentPilot : null,\r\n  isEditing: false,\r\n};\r\n\r\n\r\nexport const selectPilot = (state, payload) => {\r\n\r\n  const prevSelectedPilot = state.currentPilot;\r\n  const newSelectedPilot = payload.currentPilot;\r\n\r\n  const isSamePilot = prevSelectedPilot === newSelectedPilot;\r\n\r\n  return {\r\n    ...state,\r\n    // Deselect entirely if it's a second click on the same pilot,\r\n    // otherwise go ahead and select the one that was clicked\r\n    currentPilot : isSamePilot ? null : newSelectedPilot,\r\n  }\r\n}\r\n\r\nexport function startEditingPilot(state, payload) {\r\n  return {\r\n    ...state,\r\n    isEditing: true,\r\n  };\r\n}\r\n\r\nexport function stopEditingPilot(state, payload) {\r\n  return {\r\n    ...state,\r\n    isEditing: false,\r\n  };\r\n}\r\n\r\nexport function stopEditingIfDeleted(state, payload) {\r\n  const { currentPilot } = state;\r\n  const { itemType, itemID } = payload;\r\n\r\n  if(itemType === 'Pilot' && itemID === currentPilot) {\r\n    return {\r\n      ...state,\r\n      isEditing : false,\r\n      currenttPilot : null,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [PILOT_SELECT] : selectPilot,\r\n  [PILOT_EDIT_START] : startEditingPilot,\r\n  [PILOT_EDIT_STOP] : stopEditingPilot,\r\n  [ENTITY_DELETE] : stopEditingIfDeleted,\r\n})\r\n","import { createReducer } from '../../common/utils/reducerUtils';\r\n\r\nimport { MECH_SELECT } from './mechsConstants'\r\n\r\nconst initialState = {\r\n  currentMech: null\r\n}\r\n\r\nexport const selectMech = (state, payload) => {\r\n  const prevSelectedMech = state.currentMech;\r\n  const newSelectedMech = payload.currentMech;\r\n\r\n  const isSameMech = prevSelectedMech === newSelectedMech;\r\n\r\n  return {\r\n    currentMech: isSameMech ? null : newSelectedMech\r\n  }\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [MECH_SELECT] : selectMech\r\n})","import { createReducer } from '../../common/utils/reducerUtils';\r\n\r\nimport orm from '../orm/';\r\nconst defaultEditingEntities = orm.getEmptyState();\r\n\r\nexport default createReducer(defaultEditingEntities, {\r\n\r\n});\r\n","import {\r\n  MODAL_OPEN,\r\n  MODAL_CLOSE,\r\n} from './modalConstants';\r\n\r\nimport { createReducer } from '../../common/utils/reducerUtils';\r\n\r\nconst initialState = [];\r\n\r\nexport function openModal(state, payload) {\r\n  const { modalType, modalProps } = payload;\r\n  // Always push a new modal onto the stack\r\n  return state.concat({modalType, modalProps});\r\n}\r\n\r\nexport function closeModal(state, payload) {\r\n  // Always popping the last modal off the stack\r\n  const newState = state.slice();\r\n  newState.pop()\r\n  return newState;\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [MODAL_OPEN] : openModal,\r\n  [MODAL_CLOSE] : closeModal,\r\n});\r\n","import { createReducer} from '../../common/utils/reducerUtils';\r\n\r\nimport {\r\n  CONTEXT_MENU_SHOW,\r\n  CONTEXT_MENU_HIDE,\r\n} from './contextMenuConstants';\r\n\r\nconst contextMenuInitialState = {\r\n  show : false,\r\n  location : {\r\n    x : null,\r\n    y : null,\r\n  },\r\n  type : null,\r\n  menuArgs : undefined\r\n}\r\n\r\nfunction showContextMenu(state, payload) {\r\n  return {\r\n    ...state,\r\n    show : true,\r\n    ...payload,\r\n  };\r\n}\r\n\r\nfunction hideContextMenu(state, payload) {\r\n  return{\r\n    ...contextMenuInitialState,\r\n  };\r\n}\r\n\r\nexport default createReducer(contextMenuInitialState, {\r\n  [CONTEXT_MENU_SHOW] : showContextMenu,\r\n  [CONTEXT_MENU_HIDE] : hideContextMenu,\r\n});\r\n","import {\r\n  ENTITY_UPDATE,\r\n  ENTITY_DELETE,\r\n  ENTITY_CREATE\r\n} from './entityConstants';\r\n\r\nimport { createConditionalSliceReducer } from '../../common/utils/reducerUtils';\r\n\r\nimport orm from '../../app/orm/';\r\n\r\nexport function updateEntity(state, payload) {  \r\n  const { itemType, itemID, newItemAttributes } = payload;\r\n\r\n  const session = orm.session(state);\r\n  const ModelClass = session[itemType];\r\n\r\n\r\n  let newState = state;\r\n\r\n  if(ModelClass.idExists(itemID)) {\r\n    const modelInstance = ModelClass.withId(itemID);\r\n\r\n    modelInstance.update(newItemAttributes)\r\n\r\n    newState = session.state;\r\n  }\r\n\r\n  return newState;\r\n}\r\n\r\nexport function deleteEntity(state, payload) {  \r\n  const { itemType, itemID } = payload;\r\n\r\n  const session = orm.session(state);\r\n  const ModelClass = session[itemType];\r\n\r\n  let newState = state;\r\n\r\n  if(ModelClass.idExists(itemID)) {\r\n    const modelInstance = ModelClass.withId(itemID);\r\n    \r\n    modelInstance.delete();\r\n\r\n    // Imutably apply the updates and return the new entities structure\r\n    newState = session.state;\r\n  }\r\n\r\n  return newState;\r\n}\r\n\r\n\r\nexport function createEntity(state, payload) {\r\n  const { itemType, newItemAttributes } = payload;\r\n\r\n  const session = orm.session(state);\r\n  const ModelClass = session[itemType];\r\n\r\n  ModelClass.parse(newItemAttributes);\r\n\r\n  const newState = session.state;\r\n\r\n  return newState;\r\n}\r\n\r\nconst entityHandlers = {\r\n  [ENTITY_UPDATE] : updateEntity,\r\n  [ENTITY_DELETE] : deleteEntity,\r\n  [ENTITY_CREATE] : createEntity,\r\n}\r\n\r\nconst entityCrudFeatureReducer = createConditionalSliceReducer(\"entities\", entityHandlers);\r\n\r\nexport default entityCrudFeatureReducer;\r\n","export function getModelByType(session, itemType, itemID) {\r\n  const modelClass = session[itemType];\r\n  const model = modelClass.withId(itemID);\r\n  return model;\r\n}\r\n","import orm from '../../app/orm';\r\nimport { getModelByType } from '../../common/utils/modelUtils';\r\n\r\nexport function updateEditingEntitiesState(state, updatedEditingEntities) {\r\n  return {\r\n    ...state,\r\n    editingEntities : updatedEditingEntities,\r\n  };\r\n}\r\n\r\nexport function updateEntitiesState(state, updatedEntities) {\r\n  return {\r\n    ...state,\r\n    entities : updatedEntities,\r\n  };\r\n}\r\n\r\nexport function readEntityData(entities, itemType, itemID) {\r\n  const readSession = orm.session(entities);\r\n\r\n  // Look up the model instance for the requested item\r\n  const model = getModelByType(readSession, itemType, itemID);\r\n  const data = model.toJSON();\r\n\r\n  return data;\r\n}\r\n","import {\r\n  createEntity,\r\n  updateEntity,\r\n  deleteEntity,\r\n} from '../entities/entityReducer';\r\nimport {\r\n  EDIT_ITEM_EXISTING,\r\n  EDIT_ITEM_NEW,\r\n  EDIT_ITEM_UPDATE,\r\n  EDIT_ITEM_STOP,\r\n  EDIT_ITEM_APPLY,\r\n  EDIT_ITEM_RESET,\r\n} from './editingConstants';\r\nimport { createReducer } from '../../common/utils/reducerUtils';\r\nimport { selectEntities } from '../entities/entitySelectors';\r\nimport { selectEditingEntities } from './editingSelectors';\r\n// Return data for the editingEntities fields in the Redux-ORM session \r\nimport { readEntityData, updateEditingEntitiesState, updateEntitiesState } from './editingUtils';\r\nimport orm from '../../app/orm/'\r\nimport { getModelByType } from '../../common/utils/modelUtils';\r\nimport { create } from 'lodash';\r\n\r\n\r\n// Duplicate Model instance for the 'draft data'\r\nexport function copyEntity(sourceEntities, destinationEntities, payload){\r\n  const { itemID, itemType } = payload;\r\n\r\n  // get the json object of the requested data\r\n  const newItemAttributes = readEntityData(sourceEntities, itemType, itemID);\r\n\r\n  const creationPayload = { itemType, itemID, newItemAttributes };\r\n\r\n  const updatedEntities = createEntity(destinationEntities, creationPayload);\r\n  return updatedEntities;\r\n}\r\n\r\n\r\nexport function updateEditedEntity(sourceEntities, destinationEntities, payload) {\r\n  // Reading the 'work in progress' data\r\n  const readSession = orm.session(sourceEntities);\r\n  \r\n  const { itemType, itemID } = payload;\r\n\r\n  // Look up the model instance for the requested item\r\n  const model = getModelByType(readSession, itemType, itemID);\r\n\r\n  let writeSession = orm.session(destinationEntities);\r\n\r\n  const ModelClass = writeSession[itemType];\r\n\r\n  if(ModelClass.idExists(itemID)) {\r\n    // Look up the original model instance from the top item\r\n    const existingItem = ModelClass.withId(itemID);\r\n\r\n    if (existingItem.updateFrom) {\r\n      // Each model class should know how to properly update itself and its\r\n      // relations from another model of the same type.  Ask the original model to\r\n      // update itself based on the \"work-in-progress\" model, which queues up a\r\n      // series of immutable add/update/delete actions internally\r\n      existingItem.updateFrom(model);\r\n    }\r\n  }\r\n  else {\r\n    const itemContents = model.toJSON();\r\n    ModelClass.parse(itemContents);\r\n  }\r\n\r\n  // Imutably apply the changes to generate our new 'current' relational data\r\n  const updatedEntities = writeSession.state;\r\n  return updatedEntities;\r\n}\r\n\r\n\r\n\r\nexport function editItemExisting(state, payload) {\r\n  const entities = selectEntities(state);\r\n\r\n  const editingEntities = selectEditingEntities(state);\r\n  \r\n  const updateEditingEntities = copyEntity(entities, editingEntities, payload);\r\n\r\n  return updateEditingEntitiesState(state, updateEditingEntities);\r\n}\r\n\r\n\r\nexport function editItemNew(state, payload) {\r\n  const editingEntities = selectEditingEntities(state);\r\n\r\n  const updatedEditingEntities = createEntity(editingEntities, payload);\r\n  return updateEditingEntitiesState(state, updatedEditingEntities);\r\n}\r\n\r\n\r\nexport function editItemUpdate(state, payload) {\r\n  const editingEntities = selectEditingEntities(state);\r\n\r\n  const updatedEditingEntities = updateEntity(editingEntities, payload);\r\n  return updateEditingEntitiesState(state, updatedEditingEntities);\r\n}\r\n\r\n\r\nexport function editItemStop(state, payload) {\r\n  const editingEntities = selectEditingEntities(state);\r\n  \r\n  const updatedEditingEntities =  deleteEntity(editingEntities, payload);\r\n  return updateEditingEntitiesState(state, updatedEditingEntities);\r\n}\r\n\r\n\r\nexport function editItemApply(state, payload) {\r\n  const editingEntities = selectEditingEntities(state);\r\n  const entities = selectEntities(state);\r\n\r\n  const updatedEntities = updateEditedEntity(editingEntities, entities, payload);\r\n\r\n  return updateEntitiesState(state, updatedEntities);\r\n}\r\n\r\n\r\nexport function editItemReset(state, payload) {\r\n  const stateWithoutItem = editItemStop(state, payload);\r\n  const stateWithCurrentItem = editItemExisting(stateWithoutItem, payload);\r\n\r\n  return stateWithCurrentItem;\r\n}\r\n\r\n\r\n\r\nconst editingFeatureReducer = createReducer({}, {\r\n  [EDIT_ITEM_STOP] : editItemStop,\r\n  [EDIT_ITEM_EXISTING] : editItemExisting,\r\n  [EDIT_ITEM_NEW] : editItemNew,\r\n  [EDIT_ITEM_UPDATE] : editItemUpdate,\r\n  [EDIT_ITEM_APPLY] : editItemApply,\r\n  [EDIT_ITEM_RESET] : editItemReset,\r\n});\r\n\r\nexport default editingFeatureReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { reduceReducers } from '../../common/utils/reducerUtils';\r\n\r\nimport tabReducer from '../../features/tabs/tabReducer';\r\nimport unitInfoReducer from '../../features/unitInfo/unitInfoReducer';\r\nimport entitiesReducer from './entitiesReducer';\r\nimport pilotsReducer from '../../features/pilots/pilotsReducer';\r\nimport mechsReducer from '../../features/mechs/mechsReducer';\r\nimport editingEntitiesReducer from '../reducers/editingEntitiesReducer';\r\nimport modalReducer from '../../features/modals/modalReducer';\r\nimport contextMenuReducer from '../../features/contextMenu/contextMenuReducer';\r\n\r\nimport entityCrudReducer from '../../features/entities/entityReducer';\r\nimport editingFeatureReducer from '../../features/editing/editingReducer';\r\n\r\n\r\nconst combinedReducer = combineReducers({\r\n  entities : entitiesReducer,\r\n  editingEntities: editingEntitiesReducer,\r\n  pilots: pilotsReducer,\r\n  mechs: mechsReducer,\r\n  tabs : tabReducer,\r\n  modals : modalReducer,\r\n  contextMenu: contextMenuReducer,\r\n});\r\n\r\n\r\nconst rootReducer = reduceReducers(\r\n  entityCrudReducer,\r\n  editingFeatureReducer,\r\n  combinedReducer,\r\n  unitInfoReducer\r\n);\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport configureStore from './app/store/configureStore';\n\nconst store = configureStore();\n\n// reference to root element\nconst rootEl = document.getElementById('root')\n\n// create reusable render metheod\nlet render = () => {\n  // Dynamically import main App component, and rneder it\n  const App = require('./app/layout/App').default\n\n  ReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n      rootEl\n    );\n}\n\nif(module.hot) {\n  // Support hot reloading of components.\n  // Whenever the App component file or one of its dependencies\n  // is changed, re-import the updated component and re-render it\n  module.hot.accept('./app/layout/App', () => {\n    setTimeout(render)\n  })\n  \n}\n\nrender();\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly/'\r\n\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from '../reducers/rootReducer'\r\n\r\nexport default function configureStore(preloadState) {\r\n  const middleware = [thunk]\r\n  const middlewareEnhancer = applyMiddleware(...middleware);\r\n\r\n  const storeEnhancers = [middlewareEnhancer]\r\n\r\n  const compoesedEnhancer = composeWithDevTools(...storeEnhancers);\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadState,\r\n    compoesedEnhancer\r\n  )\r\n\r\n  if(process.env.NODE_ENV !== \"production\") {\r\n    if(module.hot) {\r\n      module.hot.accept(\"../reducers/rootReducer\", () => {\r\n        const newRootReducer = require('../reducers/rootReducer').default\r\n        store.replaceReducer(newRootReducer)\r\n      })\r\n    }\r\n  }\r\n\r\n  return store\r\n}","import { createSelector } from 'reselect';\r\n\r\nimport orm from '../../app/orm';\r\n\r\nexport const selectEditingEntities = state => state.editingEntities;\r\n\r\nexport const getEditingEntitiesSession = createSelector(\r\n  selectEditingEntities,\r\n  editingEntities => orm.session(editingEntities)\r\n);\r\n"],"sourceRoot":""}